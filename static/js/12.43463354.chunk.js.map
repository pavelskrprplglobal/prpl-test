{"version":3,"file":"static/js/12.43463354.chunk.js","mappings":"gMA4BA,EAtBa,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MAETC,GAAeC,EAAAA,EAAAA,KAAAA,CAAmBH,GAAlCE,WACFE,GAAOC,EAAAA,EAAAA,MAEb,OACE,qBAASC,UAAU,OAAM,WACvB,wBAAI,0DAEFJ,IAAeE,EAAQ,aACrBA,EAAKG,KAAI,SAACC,GAAQ,OAChB,oBAASF,UAAU,aAAY,SAC5BE,EAASC,OADyBD,EAASE,GAEpC,MAMtB,ECJA,EAjBiB,WAEf,OACE,qBAASJ,UAAU,YAAW,WAC5B,iBAAKA,UAAU,mBAAkB,WAC/B,wBAAI,wCACJ,wBAAI,8HACJ,wBAAI,yEAGN,gBAAKA,UAAU,qBAAoB,UACjC,SAAC,EAAI,QAIb,C","sources":["widgets/news/index.tsx","pages/home/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getNewsData, getNewsDataAsync } from '../../entities/news/model';\r\n\r\nimport './styles.css';\r\n\r\nconst News = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { isFetching } = getNewsDataAsync()(dispatch);\r\n  const news = getNewsData();\r\n\r\n  return (\r\n    <section className=\"news\">\r\n      <h3>This is the test of fetching data from json mock api:</h3>\r\n      {\r\n        isFetching || !news ? ('...Loading') : (\r\n          news.map((newsItem) => (\r\n            <article className=\"news__item\" key={newsItem.id}>\r\n              {newsItem.title}\r\n            </article>\r\n          ))\r\n        )\r\n      }\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\nimport News from \"../../widgets/news\";\r\n\r\nconst HomePage = () => {\r\n\r\n  return (\r\n    <section className=\"home-page\">\r\n      <div className=\"home-page__title\">\r\n        <h2>Hello, this is the test project :)</h2>\r\n        <h3>Here you can find example of popup window with input component, couple pages and a very nice dropdown with data fetching</h3>\r\n        <h3>Also you can run storybook to check list of available components</h3>\r\n      </div>\r\n\r\n      <div className=\"home-page__content\">\r\n        <News />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"names":["dispatch","useDispatch","isFetching","getNewsDataAsync","news","getNewsData","className","map","newsItem","title","id"],"sourceRoot":""}